[{"/Users/bluestacks/Projects/fdc-master/src/index.js":"1","/Users/bluestacks/Projects/fdc-master/src/App.js":"2","/Users/bluestacks/Projects/fdc-master/src/reportWebVitals.js":"3","/Users/bluestacks/Projects/fdc-master/src/components/main.js":"4","/Users/bluestacks/Projects/fdc-master/src/components/row.js":"5","/Users/bluestacks/Projects/fdc-master/src/components/Nav.js":"6","/Users/bluestacks/Projects/fdc-master/src/time.js":"7","/Users/bluestacks/Projects/fdc-master/src/firebase-config.js":"8","/Users/bluestacks/Projects/fdc-master/src/components/Campaign.js":"9","/Users/bluestacks/Projects/fdc-master/src/components/CampaignDate.js":"10","/Users/bluestacks/Projects/fdc-master/src/components/View.js":"11","/Users/bluestacks/Projects/fdc-master/src/components/Actions.js":"12","/Users/bluestacks/Projects/fdc-master/src/models/PriceModel.js":"13","/Users/bluestacks/Projects/fdc-master/src/models/CalenderModel.js":"14","/Users/bluestacks/Projects/fdc-master/src/components/NewCampaign.js":"15","/Users/bluestacks/Projects/fdc-master/src/components/Error408.js":"16"},{"size":500,"mtime":1640074523000,"results":"17","hashOfConfig":"18"},{"size":473,"mtime":1640591642867,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1640074523000,"results":"20","hashOfConfig":"18"},{"size":2828,"mtime":1640355647904,"results":"21","hashOfConfig":"18"},{"size":577,"mtime":1640241225061,"results":"22","hashOfConfig":"18"},{"size":1506,"mtime":1640355554448,"results":"23","hashOfConfig":"18"},{"size":924,"mtime":1640074523000,"results":"24","hashOfConfig":"18"},{"size":827,"mtime":1640074523000,"results":"25","hashOfConfig":"18"},{"size":663,"mtime":1640252556072,"results":"26","hashOfConfig":"18"},{"size":986,"mtime":1640252653979,"results":"27","hashOfConfig":"18"},{"size":823,"mtime":1640584711927,"results":"28","hashOfConfig":"18"},{"size":2252,"mtime":1640592764841,"results":"29","hashOfConfig":"18"},{"size":501,"mtime":1640257962877,"results":"30","hashOfConfig":"18"},{"size":925,"mtime":1640584482363,"results":"31","hashOfConfig":"18"},{"size":4486,"mtime":1640355695661,"results":"32","hashOfConfig":"18"},{"size":122,"mtime":1640590927447,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"17k4ovw",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/bluestacks/Projects/fdc-master/src/index.js",[],["75","76"],"/Users/bluestacks/Projects/fdc-master/src/App.js",["77"],"import logo from './logo.svg';\nimport './App.css';\nimport Main from './components/main';\nimport { BrowserRouter, Route, Routes  } from 'react-router-dom';\nimport Error408 from './components/Error408';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Routes>\n        <Route path='/error' element={<Error408 />} />\n        <Route path ='/fdc' element={<Main />} />\n      </Routes>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/bluestacks/Projects/fdc-master/src/reportWebVitals.js",[],"/Users/bluestacks/Projects/fdc-master/src/components/main.js",["78"],"import React, { useEffect, useState } from 'react'\nimport Nav from './Nav'\nimport Row from './row'\nimport {GetTimeDiff} from '../time'\nimport {db} from '../firebase-config'\nimport {collection , getDocs} from \"firebase/firestore\"\n\nimport './Main.css'\n\nexport const ClickableContext = React.createContext() ; \n\nfunction Main(){\n\n    const [clickable , setClickable] = useState(true) ;\n    const [campaigns , setCampaigns] = useState([]) ;\n    //Upcoming Campaign is Represented by 1 \n    //Live Campaign is represented by 0 \n    //Past Campaign is represented by -1 \n    //Initialy Campaign is set to 1  \n    const[campaignType , setCampaignType] = useState(1) ; \n\n    //This is to check if campaign date is changed \n    const[dataChanged , setDataChanged] = useState(false) ; \n\n    const campaignsCollectionRef = collection(db , \"campaigns\") ;\n    \n    useEffect(()=>{\n        const getCampaigns = async() =>{\n            const data = await getDocs(campaignsCollectionRef) ; \n            setCampaigns(data.docs.map((doc)=>({...doc.data() , id :doc.id}))) ; \n        }\n        getCampaigns() ; \n    } ,[dataChanged])\n\n    return(\n        <ClickableContext.Provider value={setClickable}>\n            <div className={clickable?\"container\":\"non-clickable-container\"}>\n                <header >\n                   <p>Manage Campaigns</p> \n                </header>\n                <Nav handleCampaignType = {setCampaignType} handleDataChanged={()=>{setDataChanged(!dataChanged)}}/>\n                <table className=\"main\">\n                    <thead>\n                        <tr>\n                            <th className='col'>DATE</th>\n                            <th className='col'>CAMPAIGN</th>\n                            <th className='col'>VIEW</th>\n                            <th className='col'>ACTIONS</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        campaigns.map(item=>{\n                            if(compareParity(GetTimeDiff(new Date(item.createdOn) , new Date()), campaignType)){\n                                return <Row key={item.id} data= {item} dataChanged= {dataChanged} setDataChanged={setDataChanged}></Row>\n                            }\n                            return null ;\n                        })\n                    }\n                    </tbody>\n                </table>\n            </div>\n        </ClickableContext.Provider>\n\n    \n        \n    )\n}\n\nfunction compareParity(first , second){\n    if(first === 0 && second ===0) return true ; \n    if(first === 0) return false ; \n    if(second === 0) return false ;\n\n    var firstParity = first/Math.abs(first) ; \n    var secondParity = second/Math.abs(second) ; \n    if(firstParity === secondParity) return true ; \n    return false ;\n}\n\nexport default Main ;","/Users/bluestacks/Projects/fdc-master/src/components/row.js",[],"/Users/bluestacks/Projects/fdc-master/src/components/Nav.js",["79","80","81"],"import React, { useEffect, useRef, useState } from 'react'\nimport './Nav.css'\nimport NewCampaign from './NewCampaign';\n\nfunction Nav({handleCampaignType , handleDataChanged}){\n    const [openNewCampaignForm , setOpenNewCampaignForm] = useState(false) ;\n    const upcomingCampaignRef  = useRef(null) ;\n    const link = 'link' ; \n    const clickedLink = \"clicked-link\" ;\n    useEffect(()=>{\n        upcomingCampaignRef.current.classList.add( clickedLink);\n    },[])\n\n    var handleClick = (e , val)=>{\n        e.preventDefault() ; \n        handleCampaignType(val) ;\n\n        //Change the classList of links \n        var links = document.getElementsByClassName(link) ;\n        console.log(links); \n        for(var i = 0; i <links.length ; ++i){\n            links[i].classList.remove(clickedLink) ;\n        }\n        e.target.classList.add(clickedLink);\n    }\n    return(\n        <nav className=\"navBar\">\n            <a href=\"#\" onClick={(e)=>{handleClick(e,1)}}className='link' ref={upcomingCampaignRef}>Upcoming Campaings</a>\n            <a href=\"#\" onClick={(e)=>{handleClick(e,0)}} className='link' >Live Campaigns</a>\n            <a href=\"#\" onClick={(e)=>{handleClick(e,-1)}} className='link' >Past Campaings</a>\n            <button className='add-campaign' onClick={()=>setOpenNewCampaignForm(true)}>+</button>\n            {openNewCampaignForm&& <NewCampaign handleDataChanged={handleDataChanged} onClose={()=>{setOpenNewCampaignForm(false)}}></NewCampaign>}\n        </nav>\n    )\n}\n\nexport default Nav ;","/Users/bluestacks/Projects/fdc-master/src/time.js",[],"/Users/bluestacks/Projects/fdc-master/src/firebase-config.js",[],"/Users/bluestacks/Projects/fdc-master/src/components/Campaign.js",["82"],"import React from 'react'\nimport './Campaign.css'\n\nfunction Campaign({name , region , img_url}){\n    return (\n        <td className=\"col campaign\">\n            <table>\n                <tbody>\n                    <tr className=\"campaignRow\">    \n                        <td className='campaignImg' rowSpan= \"2\"><img src={img_url} /></td>\n                        <td className='game-name'><p>{name}</p></td>\n                    </tr>\n                    <tr className=\"campaignRow\">\n                        <td className='region'>{region}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </td>\n    )\n}\n\nexport default Campaign ; ","/Users/bluestacks/Projects/fdc-master/src/components/CampaignDate.js",[],"/Users/bluestacks/Projects/fdc-master/src/components/View.js",["83"],"import React, { useContext, useState } from 'react'\nimport PriceModel from '../models/PriceModel';\nimport { ClickableContext } from './main';\nimport { AiFillDollarCircle } from \"react-icons/ai\";\n\nimport './View.css'\n\nfunction View(props){\n    const [priceModelVis , setPriceModelVis] = useState(false) ; \n    const setClickable =  useContext(ClickableContext) ;\n    return (\n        <td className=\"col view\">\n            <a href =\"#\" onClick={(event)=>{\n                event.preventDefault() ; \n                setPriceModelVis(true);\n                setClickable(false);\n                }} >  \n            <AiFillDollarCircle className='priceIcon icon' color='yellow' size={20}/>View Pricing</a>\n            {priceModelVis && <PriceModel handleVisiblity= {setPriceModelVis}/>}\n        </td>\n    )\n}\nexport default View ; ","/Users/bluestacks/Projects/fdc-master/src/components/Actions.js",["84"],"import React, { useState , useContext } from 'react'\nimport CalendarModel from '../models/CalenderModel'\nimport {updateDoc ,doc} from 'firebase/firestore'\nimport {db} from '../firebase-config'\nimport { ClickableContext } from '../components/main';\nimport { AiFillFile} from \"react-icons/ai\";\nimport { IoStatsChart } from \"react-icons/io5\";\nimport {FaCalendarAlt } from \"react-icons/fa\" ;\nimport axios from 'axios';\nimport { useNavigate} from \"react-router-dom\";\nimport './Actions.css'\n\nfunction Actions({data, dataChanged ,setDataChanged}){\n    //setClickable(false) is used to make Background div non clickable  \n    const setClickable =  useContext(ClickableContext) ;\n    const[calenderVis , setCalenderVis] = useState(false) ; \n    const navigate = useNavigate() ;\n\n    var handleDataChange = async (date)=>{\n        const campaign = doc(db , 'campaigns' , data.id ) ;\n        const newField = {createdOn : date.getTime()}; \n        await updateDoc(campaign ,newField) ;\n        setDataChanged(!dataChanged) ;\n        setCalenderVis(false);\n    }\n\n    var handleRequest = async (e) =>{\n        e.preventDefault() ; \n        var url = e.target.href ; \n        axios.get(url).then().catch(err=>{\n            if(err.response.status == \"404\"){\n                navigate(\"/error\");\n            }\n        })\n\n    }\n    return (\n        <td className=\"col actions\">\n            <ul>\n                <li><AiFillFile className='icon' size={20} color='lightgreen'/><a href={data.csv} onClick={(e)=>handleRequest(e)}>CSV</a></li>\n                <li><IoStatsChart className='icon' size={20} color='orange'/><a href={data.report} onClick={(e)=>handleRequest(e)}>Report</a></li>\n                <li>\n                    <FaCalendarAlt className='icon' size={20} color='lightblue'/>\n                    <button onClick={()=>{\n                        setClickable(false);\n                        setCalenderVis(!calenderVis)\n                        }} className='schedule'>Schedule Again</button>\n                    {calenderVis&&<CalendarModel date ={new Date(data.createdOn)} handleDataChange = {handleDataChange} handleCalendarVis={()=>{setCalenderVis(!calenderVis)}} />}\n                </li>\n            </ul>\n        </td>\n    )\n}\n\nexport default Actions ; ","/Users/bluestacks/Projects/fdc-master/src/models/PriceModel.js",[],"/Users/bluestacks/Projects/fdc-master/src/models/CalenderModel.js",["85","86"],"import React, { useContext, useEffect } from 'react' \nimport { Button } from 'react-bootstrap';\nimport Calendar from 'react-calendar'\nimport { ClickableContext } from '../components/main';\n\nfunction CalendarModel({date ,handleDataChange , handleCalendarVis}){\n    //setClickable(true) is used to make Background div clickable  \n    const setClickable =  useContext(ClickableContext) ;\n\n    useEffect(()=>{\n        window.addEventListener('click' , handleClick) ; \n\n        return ()=>{\n            window.removeEventListener('click', handleClick)\n        }\n    },[])\n\n    var handleClick = ()=>{\n        setClickable(true); \n        handleCalendarVis() ;\n    }\n    return(\n        <div className=\"calendarModel model\">\n            <Calendar value={date} onChange={(date)=>{\n                handleDataChange(date);\n                setClickable(true);\n                }}/>\n        </div>\n    )\n}\n\nexport default CalendarModel ;","/Users/bluestacks/Projects/fdc-master/src/components/NewCampaign.js",["87"],"import React, { useState } from \"react\";\nimport ReactDOM from 'react-dom';\nimport {db} from '../firebase-config'\nimport {addDoc, collection, updateDoc , } from \"firebase/firestore\"\nimport './NewCampaign.css'\nfunction createObj(name ,createdOn ,region , image_url , csv , report , weekPrice , halfYearPrice , oneYearPrice){\n    return(\n        {\n            name : name , \n            createdOn: createdOn,\n            region: region ,\n            image_url: image_url ,\n            csv: csv ,\n            report: report ,\n            price:{weekPrice:weekPrice , halfYearPrice:halfYearPrice , oneYearPrice:oneYearPrice}\n        }\n    )\n}\nfunction NewCampaign ({onClose , handleDataChanged}){\n    const[campaign , setCampaign] = useState(\"\");\n    const[date, setDate] = useState(new Date());\n    const[region , setRegion] = useState(\"IN\");\n    const[img , setImg] = useState(\"\");\n    const[csv , setCSV] = useState(\"\");\n    const[report, setReport] = useState(\"\");\n    const[weekPrice , setWeekPrice] = useState(0);\n    const[halfYearPrice , setHalfYearPrice] = useState(0);\n    const[oneYearPrice , setOneYearPrice] = useState(0);\n\n    var addCampaign = async()=>{\n        const campaignsCollectionRef = collection(db , \"campaigns\") ;\n        var millisec = date.getTime();\n        var doc = createObj(campaign , millisec , region , img , csv , report , weekPrice , halfYearPrice , oneYearPrice) ;\n        await addDoc(campaignsCollectionRef, doc) ;\n\n        //Refresh the page on Adding new Data \n        handleDataChanged();\n        //Close the window after adding new Campaign\n        onClose() ;\n    }\n\n    return(\n        ReactDOM.createPortal(\n        <div className=\"overlay\">\n            <div className=\"new-campaign\">\n                <header>\n                    <p>\n                        New campaign\n                    </p>\n                </header>\n                <form className=\"new-campaign-body\"> \n                    <div className=\"form-elem\">\n                        <label>Campaign</label>\n                        <input type=\"text\" value={campaign} onChange={(e)=>setCampaign(e.target.value)}/>\n                    </div>\n                    <div className=\"form-elem\">\n                        <label>Date</label>\n                        <input type=\"date\" value={date} onChange={(e)=>setDate(e.target.value)}/>\n                    </div>\n                    <div className=\"form-elem\">\n                        <label>Region</label>\n                        <input type=\"text\" value={region} onChange={(e)=>setRegion(e.target.value)}/>\n                    </div>\n                    <div className=\"form-elem\">\n                        <label>Image URL</label>\n                        <input type=\"text\" value={img} onChange={(e)=>setImg(e.target.value)}/>\n                    </div>\n                    <div className=\"form-elem\">\n                        <label>CSV</label>\n                        <input type=\"text\" value={csv} onChange={(e)=>setCSV(e.target.value)}/>\n                    </div>\n                    <div className=\"form-elem\">\n                        <label>Report</label>\n                        <input type=\"text\" value={report} onChange={(e)=>setReport(e.target.value)}/>\n                    </div>\n                    <h4 className=\"pricing-header\">Pricing</h4>\n                    <div>\n                        <div className=\"form-elem\">\n                            <label>1 Week - 1 Month</label>\n                            <input type=\"number\" value={weekPrice} onChange={(e)=>setWeekPrice(e.target.value)}/>\n                        </div>\n                        <div className=\"form-elem\">\n                            <label>6 Months</label>\n                            <input type=\"number\" value={halfYearPrice} onChange={(e)=>setHalfYearPrice(e.target.value)}/>\n                        </div>\n                        <div className=\"form-elem\">\n                            <label>1 year</label>\n                            <input type=\"number\" value={oneYearPrice} onChange={(e)=>setOneYearPrice(e.target.value)}/>\n                        </div>\n                    </div>\n                </form>\n                <div className=\"footer\">\n                    <div onClick={addCampaign} className=\"button\">Add</div>\n                    <div onClick={onClose} className=\"button\">Close</div>\n                </div>\n            </div> \n        </div>, document.getElementById('modal-root'))\n        \n    )\n}\n\nexport default NewCampaign;","/Users/bluestacks/Projects/fdc-master/src/components/Error408.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":12},{"ruleId":"96","severity":1,"message":"97","line":33,"column":8,"nodeType":"98","endLine":33,"endColumn":21,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":28,"column":13,"nodeType":"102","endLine":28,"endColumn":101},{"ruleId":"100","severity":1,"message":"101","line":29,"column":13,"nodeType":"102","endLine":29,"endColumn":77},{"ruleId":"100","severity":1,"message":"101","line":30,"column":13,"nodeType":"102","endLine":30,"endColumn":78},{"ruleId":"103","severity":1,"message":"104","line":10,"column":66,"nodeType":"102","endLine":10,"endColumn":87},{"ruleId":"100","severity":1,"message":"101","line":13,"column":13,"nodeType":"102","endLine":17,"endColumn":21},{"ruleId":"105","severity":1,"message":"106","line":31,"column":36,"nodeType":"107","messageId":"108","endLine":31,"endColumn":38},{"ruleId":"92","severity":1,"message":"109","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},{"ruleId":"96","severity":1,"message":"110","line":16,"column":7,"nodeType":"98","endLine":16,"endColumn":9,"suggestions":"111"},{"ruleId":"92","severity":1,"message":"112","line":4,"column":29,"nodeType":"94","messageId":"95","endLine":4,"endColumn":38},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'campaignsCollectionRef'. Either include it or remove the dependency array.","ArrayExpression",["115"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'handleClick'. Either include it or remove the dependency array.",["116"],"'updateDoc' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [campaignsCollectionRef, dataChanged]",{"range":"121","text":"122"},"Update the dependencies array to be: [handleClick]",{"range":"123","text":"124"},[1100,1113],"[campaignsCollectionRef, dataChanged]",[563,565],"[handleClick]"]