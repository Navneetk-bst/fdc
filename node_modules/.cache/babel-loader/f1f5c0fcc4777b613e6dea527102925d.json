{"ast":null,"code":"export function ConvertDateFormat(ticks) {\n  //Return Date in format MMM YYYY, dd (oct 2019 , 28)\n  var date = new Date(ticks); //toDateString Return Date in format (Day Month Date Year)\n\n  var dateStr = date.toDateString().split(' ');\n  var result = dateStr[1] + ' ' + dateStr[3] + ',' + dateStr[2];\n  return result;\n}\n_c = ConvertDateFormat;\nexport function NumberOfDaysDiff(date1, date2) {\n  // One day in milliseconds\n  const oneDay = 1000 * 60 * 60 * 24; //Time difference\n\n  const timeDiff = Math.abs(GetTimeDiff(date1, date2)); //Convert timeDiff into DayDiff\n\n  const diffInDays = Math.floor(timeDiff / oneDay);\n  return diffInDays;\n}\n_c2 = NumberOfDaysDiff;\nexport function GetTimeDiff(date1, date2) {\n  var dateUTC1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n  var dateUTC2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n  return dateUTC1 - dateUTC2;\n}\n_c3 = GetTimeDiff;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ConvertDateFormat\");\n$RefreshReg$(_c2, \"NumberOfDaysDiff\");\n$RefreshReg$(_c3, \"GetTimeDiff\");","map":{"version":3,"sources":["/Users/bluestacks/Projects/fdc-master/src/time.js"],"names":["ConvertDateFormat","ticks","date","Date","dateStr","toDateString","split","result","NumberOfDaysDiff","date1","date2","oneDay","timeDiff","Math","abs","GetTimeDiff","diffInDays","floor","dateUTC1","UTC","getFullYear","getMonth","getDate","dateUTC2"],"mappings":"AAAA,OAAO,SAASA,iBAAT,CAA2BC,KAA3B,EAAiC;AACpC;AACA,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,KAAT,CAAX,CAFoC,CAGpC;;AACA,MAAIG,OAAO,GAAGF,IAAI,CAACG,YAAL,GAAoBC,KAApB,CAA0B,GAA1B,CAAd;AACA,MAAIC,MAAM,GAAGH,OAAO,CAAC,CAAD,CAAP,GAAa,GAAb,GAAmBA,OAAO,CAAC,CAAD,CAA1B,GAAgC,GAAhC,GAAsCA,OAAO,CAAC,CAAD,CAA1D;AACA,SAAOG,MAAP;AAEH;KAReP,iB;AAShB,OAAO,SAASQ,gBAAT,CAA0BC,KAA1B,EAAkCC,KAAlC,EAAwC;AAC3C;AACA,QAAMC,MAAM,GAAG,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAhC,CAF2C,CAI3C;;AACA,QAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASC,WAAW,CAACN,KAAD,EAASC,KAAT,CAApB,CAAjB,CAL2C,CAO3C;;AACA,QAAMM,UAAU,GAAGH,IAAI,CAACI,KAAL,CAAWL,QAAQ,GAAGD,MAAtB,CAAnB;AAEA,SAAOK,UAAP;AAGH;MAbeR,gB;AAehB,OAAO,SAASO,WAAT,CAAqBN,KAArB,EAA6BC,KAA7B,EAAmC;AACtC,MAAIQ,QAAQ,GAAGf,IAAI,CAACgB,GAAL,CAASV,KAAK,CAACW,WAAN,EAAT,EAA8BX,KAAK,CAACY,QAAN,EAA9B,EAAgDZ,KAAK,CAACa,OAAN,EAAhD,CAAf;AACA,MAAIC,QAAQ,GAAGpB,IAAI,CAACgB,GAAL,CAAST,KAAK,CAACU,WAAN,EAAT,EAA8BV,KAAK,CAACW,QAAN,EAA9B,EAAgDX,KAAK,CAACY,OAAN,EAAhD,CAAf;AAEA,SAAOJ,QAAQ,GAAGK,QAAlB;AACH;MALeR,W","sourcesContent":["export function ConvertDateFormat(ticks){\n    //Return Date in format MMM YYYY, dd (oct 2019 , 28)\n    var date = new Date(ticks) ; \n    //toDateString Return Date in format (Day Month Date Year)\n    var dateStr = date.toDateString().split(' ') ; \n    var result = dateStr[1] + ' ' + dateStr[3] + ',' + dateStr[2] ; \n    return result ; \n    \n}\nexport function NumberOfDaysDiff(date1 , date2){\n    // One day in milliseconds\n    const oneDay = 1000 * 60 * 60 * 24;\n\n    //Time difference\n    const timeDiff = Math.abs(GetTimeDiff(date1 , date2));\n\n    //Convert timeDiff into DayDiff\n    const diffInDays = Math.floor(timeDiff / oneDay);\n\n    return diffInDays;\n    \n    \n}\n\nexport function GetTimeDiff(date1 , date2){\n    var dateUTC1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n    var dateUTC2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n\n    return dateUTC1 - dateUTC2 ;\n}"]},"metadata":{},"sourceType":"module"}