{"version":3,"sources":["logo.svg","components/Nav.js","models/CalenderModel.js","firebase-config.js","components/Actions.js","components/Campaign.js","time.js","components/CampaignDate.js","models/PriceModel.js","components/View.js","components/row.js","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","handleCampaignType","upcomingCampaignRef","useRef","clickedLink","useEffect","current","classList","add","handleClick","e","val","preventDefault","links","document","getElementsByClassName","console","log","i","length","remove","target","className","href","onClick","ref","CalendarModel","date","handleDataChange","setClickable","useContext","ClickableContext","value","onChange","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","Actions","data","dataChanged","setDataChanged","useState","calenderVis","setCalenderVis","a","campaign","doc","id","newField","createdOn","getTime","updateDoc","size","color","csv","report","Date","Campaign","name","region","img_url","rowSpan","src","GetTimeDiff","date1","date2","UTC","getFullYear","getMonth","getDate","CampaignDate","ticks","dateStr","toDateString","split","ConvertDateFormat","now","daysDiff","timeDiff","Math","abs","floor","NumberOfDaysDiff","message","PriceModel","handleVisiblity","setCliclable","View","props","priceModelVis","setPriceModelVis","event","Row","price","React","createContext","Main","clickable","campaigns","setCampaigns","campaignType","setCampaignType","campaignsCollectionRef","collection","getCampaigns","getDocs","docs","map","Provider","item","first","second","firstParity","secondParity","compareParity","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.61c0572f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useRef } from 'react'\nimport './Nav.css'\n\nfunction Nav({handleCampaignType}){\n    const upcomingCampaignRef  = useRef(null) ;\n    const link = 'link' ; \n    const clickedLink = \"clicked-link\" ;\n    useEffect(()=>{\n        upcomingCampaignRef.current.classList.add( clickedLink);\n    },[])\n\n    var handleClick = (e , val)=>{\n        e.preventDefault() ; \n        handleCampaignType(val) ;\n\n        //Change the classList of links \n        var links = document.getElementsByClassName(link) ;\n        console.log(links); \n        for(var i = 0; i <links.length ; ++i){\n            links[i].classList.remove(clickedLink) ;\n        }\n        e.target.classList.add(clickedLink);\n    }\n    return(\n        <nav className=\"navBar\">\n            <a href=\"#\" onClick={(e)=>{handleClick(e,1)}}className='link' ref={upcomingCampaignRef}>Upcoming Campaings</a>\n            <a href=\"#\" onClick={(e)=>{handleClick(e,0)}} className='link' >Live Campaigns</a>\n            <a href=\"#\" onClick={(e)=>{handleClick(e,-1)}} className='link' >Past Campaings</a>\n        </nav>\n    )\n}\n\nexport default Nav ;","import React, { useContext } from 'react' \nimport Calendar from 'react-calendar'\nimport { ClickableContext } from '../components/main';\n\nfunction CalendarModel({date ,handleDataChange}){\n    //setClickable(true) is used to make Background div clickable  \n    const setClickable =  useContext(ClickableContext) ;\n    return(\n        <div className=\"calendarModel model\">\n            <Calendar value={date} onChange={(date)=>{\n                handleDataChange(date);\n                setClickable(true);\n                }}/>\n        </div>\n    )\n}\n\nexport default CalendarModel ;","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport {getFirestore} from \"@firebase/firestore\" ; \n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA8WYdadM3B1-fsb-kUaIKUhQdLJfCXK88\",\n  authDomain: \"bluestacks-fdc.firebaseapp.com\",\n  projectId: \"bluestacks-fdc\",\n  storageBucket: \"bluestacks-fdc.appspot.com\",\n  messagingSenderId: \"703547175556\",\n  appId: \"1:703547175556:web:342f7238253296a22008d1\",\n  measurementId: \"G-ZYFKTQ4KDS\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nexport const db = getFirestore(app) ; ","import React, { useState , useContext } from 'react'\nimport CalendarModel from '../models/CalenderModel'\nimport {updateDoc ,doc} from 'firebase/firestore'\nimport {db} from '../firebase-config'\nimport { ClickableContext } from '../components/main';\nimport { AiFillFile} from \"react-icons/ai\";\nimport { IoStatsChart } from \"react-icons/io5\";\nimport {FaCalendarAlt } from \"react-icons/fa\"\nimport './Actions.css'\n\nfunction Actions({data, dataChanged ,setDataChanged}){\n    //setClickable(false) is used to make Background div non clickable  \n    const setClickable =  useContext(ClickableContext) ;\n    const[calenderVis , setCalenderVis] = useState(false) ; \n    var handleDataChange = async (date)=>{\n        const campaign = doc(db , 'campaigns' , data.id ) ;\n        const newField = {createdOn : date.getTime()}; \n        await updateDoc(campaign ,newField) ;\n        setDataChanged(!dataChanged) ;\n        setCalenderVis(false);\n    }\n    return (\n        <td className=\"col actions\">\n            <ul>\n                <li><AiFillFile className='icon' size={20} color='lightgreen'/><a href={data.csv}>CSV</a></li>\n                <li><IoStatsChart className='icon' size={20} color='orange'/><a href={data.report}>Report</a></li>\n                <li>\n                    <FaCalendarAlt className='icon' size={20} color='lightblue'/>\n                    <button onClick={()=>{\n                        setClickable(false);\n                        setCalenderVis(!calenderVis);\n                        }} className='schedule'>Schedule Again</button>\n                    {calenderVis&&<CalendarModel date ={new Date(data.createdOn)} handleDataChange = {handleDataChange} />}\n                </li>\n            </ul>\n        </td>\n    )\n}\n\nexport default Actions ; ","import React from 'react'\nimport './Campaign.css'\n\nfunction Campaign({name , region , img_url}){\n    return (\n        <td className=\"col campaign\">\n            <table>\n                <tbody>\n                    <tr className=\"campaignRow\">    \n                        <td className='campaignImg' rowSpan= \"2\"><img src={img_url} /></td>\n                        <td className='game-name'><p>{name}</p></td>\n                    </tr>\n                    <tr className=\"campaignRow\">\n                        <td className='region'>{region}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </td>\n    )\n}\n\nexport default Campaign ; ","export function ConvertDateFormat(ticks){\n    //Return Date in format MMM YYYY, dd (oct 2019 , 28)\n    var date = new Date(ticks) ; \n    //toDateString Return Date in format (Day Month Date Year)\n    var dateStr = date.toDateString().split(' ') ; \n    var result = dateStr[1] + ' ' + dateStr[3] + ',' + dateStr[2] ; \n    return result ; \n    \n}\nexport function NumberOfDaysDiff(date1 , date2){\n    // One day in milliseconds\n    const oneDay = 1000 * 60 * 60 * 24;\n\n    //Time difference\n    const timeDiff = Math.abs(GetTimeDiff(date1 , date2));\n\n    //Convert timeDiff into DayDiff\n    const diffInDays = Math.floor(timeDiff / oneDay);\n\n    return diffInDays;\n    \n    \n}\n\nexport function GetTimeDiff(date1 , date2){\n    var dateUTC1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n    var dateUTC2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n\n    return dateUTC1 - dateUTC2 ;\n}","import React from 'react'\nimport {NumberOfDaysDiff} from '../time'\n\nimport './CampaignDate.css'\n\nfunction ConvertDateFormat(ticks){\n    //Return Date in format MMM YYYY, dd (oct 2019 , 28)\n    var date = new Date(ticks) ; \n    //toDateString Return Date in format (Day Month Date Year)\n    var dateStr = date.toDateString().split(' ') ; \n    var result = dateStr[1] + ' ' + dateStr[3] + ',' + dateStr[2] ; \n    return result ; \n    \n}\nfunction CampaignDate({ticks}){\n    var date = ConvertDateFormat(ticks) ; \n\n    //Get the number of milliseconds elapsed since January 1, 1970\n    var now = new Date() ; \n    var daysDiff = NumberOfDaysDiff(now , new Date(ticks)) ;\n    const ahead = \"Ahead\" ; \n    const ago = \"Ago\" ;\n    var message = ' Days ' + ((ticks >= now )?ahead:ago) ;\n    return (\n        <td className='col campaignDate'>\n            <div>{date}</div>\n            <div className='days-diff'>{daysDiff} {message} </div>\n        </td>\n    )\n}\n\nexport default CampaignDate ;   ","import React, { useContext } from 'react'\nimport { ClickableContext } from '../components/main';\n\nfunction PriceModel({handleVisiblity}){\n    const setCliclable =  useContext(ClickableContext) ;\n    return(\n\n        <div className = \"priceModel model\">\n            Price Information; \n            <div className=\"close\" onClick={()=>{\n                    handleVisiblity(false);\n                    setCliclable(true);\n                }}>Close</div>\n        </div>\n    )\n}\n\nexport default PriceModel ;","import React, { useContext, useState } from 'react'\nimport PriceModel from '../models/PriceModel';\nimport { ClickableContext } from './main';\nimport { AiFillDollarCircle } from \"react-icons/ai\";\n\nimport './View.css'\n\nfunction View(props){\n    const [priceModelVis , setPriceModelVis] = useState(false) ; \n    const setClickable =  useContext(ClickableContext) ;\n    return (\n        <td className=\"col view\">\n            <a href =\"#\" onClick={(event)=>{\n                event.preventDefault() ; \n                setPriceModelVis(true);\n                setClickable(false);\n                }} >  \n            <AiFillDollarCircle className='priceIcon icon' color='yellow' size={20}/>View Pricing</a>\n            {priceModelVis && <PriceModel handleVisiblity= {setPriceModelVis}/>}\n        </td>\n    )\n}\nexport default View ; ","import React from 'react'\nimport Actions from './Actions'\nimport Campaign from './Campaign'\nimport CampaignDate from './CampaignDate';\nimport View from './View'\n\nfunction Row({data , dataChanged , setDataChanged}){ \n    return (\n        <tr className='row'>\n            <CampaignDate ticks = {data.createdOn} />\n            <Campaign name={data.name} region ={data.region} img_url = {data.img_url}/>\n            <View price={data.price} />\n            <Actions data={data} dataChanged={dataChanged} setDataChanged={setDataChanged} />\n        </tr>\n    )\n}\n\nexport default Row ;","import React, { useEffect, useState } from 'react'\nimport Nav from './Nav'\nimport Row from './row'\nimport {GetTimeDiff} from '../time'\nimport {db} from '../firebase-config'\nimport {collection , getDocs} from \"firebase/firestore\"\n\nimport './Main.css'\n\nexport const ClickableContext = React.createContext() ; \n\nfunction Main(){\n\n    const [clickable , setClickable] = useState(true) ;\n    const [campaigns , setCampaigns] = useState([]) ;\n    //Upcoming Campaign is Represented by 1 \n    //Live Campaign is represented by 0 \n    //Past Campaign is represented by -1 \n    //Initialy Campaign is set to 1  \n    const[campaignType , setCampaignType] = useState(1) ; \n\n    //This is to check if campaign date is changed \n    const[dataChanged , setDataChanged] = useState(false) ; \n\n    const campaignsCollectionRef = collection(db , \"campaigns\") ;\n    \n    useEffect(()=>{\n        const getCampaigns = async() =>{\n            const data = await getDocs(campaignsCollectionRef) ; \n            setCampaigns(data.docs.map((doc)=>({...doc.data() , id :doc.id}))) ; \n        }\n        getCampaigns() ; \n    } ,[dataChanged])\n\n    return(\n        <ClickableContext.Provider value={setClickable}>\n            <div className={clickable?\"container\":\"non-clickable-container\"}>\n                <header >\n                   <p>Manage Campaigns</p> \n                </header>\n                <Nav handleCampaignType = {setCampaignType}/>\n                <table className=\"main\">\n                    <thead>\n                        <tr>\n                            <th className='col'>DATE</th>\n                            <th className='col'>CAMPAIGN</th>\n                            <th className='col'>VIEW</th>\n                            <th className='col'>ACTIONS</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        campaigns.map(item=>{\n                            if(compareParity(GetTimeDiff(new Date(item.createdOn) , new Date()), campaignType)){\n                                return <Row key={item.id} data= {item} dataChanged= {dataChanged} setDataChanged={setDataChanged}></Row>\n                            }\n                            return null ;\n                        })\n                    }\n                    </tbody>\n                </table>\n            </div>\n        </ClickableContext.Provider>\n\n    \n        \n    )\n}\n\nfunction compareParity(first , second){\n    if(first === 0 && second ===0) return true ; \n    if(first === 0) return false ; \n    if(second === 0) return false ;\n\n    var firstParity = first/Math.abs(first) ; \n    var secondParity = second/Math.abs(second) ; \n    if(firstParity === secondParity) return true ; \n    return false ;\n}\n\nexport default Main ;","import logo from './logo.svg';\nimport './App.css';\nimport Main from './components/main';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}