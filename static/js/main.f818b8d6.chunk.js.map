{"version":3,"sources":["logo.svg","firebase-config.js","components/NewCampaign.js","components/Nav.js","models/CalenderModel.js","components/Actions.js","components/Campaign.js","time.js","components/CampaignDate.js","models/PriceModel.js","components/View.js","components/row.js","components/main.js","components/Error408.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","createObj","name","createdOn","region","image_url","csv","report","weekPrice","halfYearPrice","oneYearPrice","price","NewCampaign","onClose","handleDataChanged","useState","campaign","setCampaign","Date","date","setDate","setRegion","img","setImg","setCSV","setReport","setWeekPrice","setHalfYearPrice","setOneYearPrice","addCampaign","a","campaignsCollectionRef","collection","millisec","getTime","doc","addDoc","ReactDOM","createPortal","className","type","value","onChange","e","target","onClick","document","getElementById","Nav","handleCampaignType","openNewCampaignForm","setOpenNewCampaignForm","upcomingCampaignRef","useRef","clickedLink","useEffect","current","classList","add","handleClick","val","preventDefault","links","getElementsByClassName","console","log","i","length","remove","href","ref","CalendarModel","handleDataChange","handleCalendarVis","setClickable","useContext","ClickableContext","window","addEventListener","removeEventListener","Actions","data","dataChanged","setDataChanged","calenderVis","setCalenderVis","navigate","useNavigate","id","newField","updateDoc","handleRequest","url","axios","get","then","catch","err","response","status","size","color","Campaign","img_url","rowSpan","src","GetTimeDiff","date1","date2","UTC","getFullYear","getMonth","getDate","CampaignDate","ticks","dateStr","toDateString","split","ConvertDateFormat","now","daysDiff","timeDiff","Math","abs","floor","NumberOfDaysDiff","message","PriceModel","handleVisiblity","setCliclable","View","props","priceModelVis","setPriceModelVis","event","Row","React","createContext","Main","clickable","campaigns","setCampaigns","campaignType","setCampaignType","getCampaigns","getDocs","docs","map","Provider","item","first","second","firstParity","secondParity","compareParity","Error408","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.f818b8d6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport {getFirestore} from \"@firebase/firestore\" ; \n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA8WYdadM3B1-fsb-kUaIKUhQdLJfCXK88\",\n  authDomain: \"bluestacks-fdc.firebaseapp.com\",\n  projectId: \"bluestacks-fdc\",\n  storageBucket: \"bluestacks-fdc.appspot.com\",\n  messagingSenderId: \"703547175556\",\n  appId: \"1:703547175556:web:342f7238253296a22008d1\",\n  measurementId: \"G-ZYFKTQ4KDS\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nexport const db = getFirestore(app) ; ","import React, { useState } from \"react\";\nimport ReactDOM from 'react-dom';\nimport {db} from '../firebase-config'\nimport {addDoc, collection, updateDoc , } from \"firebase/firestore\"\nimport './NewCampaign.css'\nfunction createObj(name ,createdOn ,region , image_url , csv , report , weekPrice , halfYearPrice , oneYearPrice){\n    return(\n        {\n            name : name , \n            createdOn: createdOn,\n            region: region ,\n            image_url: image_url ,\n            csv: csv ,\n            report: report ,\n            price:{weekPrice:weekPrice , halfYearPrice:halfYearPrice , oneYearPrice:oneYearPrice}\n        }\n    )\n}\nfunction NewCampaign ({onClose , handleDataChanged}){\n    const[campaign , setCampaign] = useState(\"\");\n    const[date, setDate] = useState(new Date());\n    const[region , setRegion] = useState(\"IN\");\n    const[img , setImg] = useState(\"\");\n    const[csv , setCSV] = useState(\"\");\n    const[report, setReport] = useState(\"\");\n    const[weekPrice , setWeekPrice] = useState(0);\n    const[halfYearPrice , setHalfYearPrice] = useState(0);\n    const[oneYearPrice , setOneYearPrice] = useState(0);\n\n    var addCampaign = async()=>{\n        const campaignsCollectionRef = collection(db , \"campaigns\") ;\n        var millisec = date.getTime();\n        var doc = createObj(campaign , millisec , region , img , csv , report , weekPrice , halfYearPrice , oneYearPrice) ;\n        await addDoc(campaignsCollectionRef, doc) ;\n\n        //Refresh the page on Adding new Data \n        handleDataChanged();\n        //Close the window after adding new Campaign\n        onClose() ;\n    }\n\n    return(\n        ReactDOM.createPortal(\n        <div className=\"overlay\">\n            <div className=\"new-campaign\">\n                <header>\n                    <p>\n                        New campaign\n                    </p>\n                </header>\n                <form className=\"new-campaign-body\"> \n                    <div className=\"form-elem\">\n                        <label>Campaign</label>\n                        <input type=\"text\" value={campaign} onChange={(e)=>setCampaign(e.target.value)}/>\n                    </div>\n                    <div className=\"form-elem\">\n                        <label>Date</label>\n                        <input type=\"date\" value={date} onChange={(e)=>setDate(e.target.value)}/>\n                    </div>\n                    <div className=\"form-elem\">\n                        <label>Region</label>\n                        <input type=\"text\" value={region} onChange={(e)=>setRegion(e.target.value)}/>\n                    </div>\n                    <div className=\"form-elem\">\n                        <label>Image URL</label>\n                        <input type=\"text\" value={img} onChange={(e)=>setImg(e.target.value)}/>\n                    </div>\n                    <div className=\"form-elem\">\n                        <label>CSV</label>\n                        <input type=\"text\" value={csv} onChange={(e)=>setCSV(e.target.value)}/>\n                    </div>\n                    <div className=\"form-elem\">\n                        <label>Report</label>\n                        <input type=\"text\" value={report} onChange={(e)=>setReport(e.target.value)}/>\n                    </div>\n                    <h4 className=\"pricing-header\">Pricing</h4>\n                    <div>\n                        <div className=\"form-elem\">\n                            <label>1 Week - 1 Month</label>\n                            <input type=\"number\" value={weekPrice} onChange={(e)=>setWeekPrice(e.target.value)}/>\n                        </div>\n                        <div className=\"form-elem\">\n                            <label>6 Months</label>\n                            <input type=\"number\" value={halfYearPrice} onChange={(e)=>setHalfYearPrice(e.target.value)}/>\n                        </div>\n                        <div className=\"form-elem\">\n                            <label>1 year</label>\n                            <input type=\"number\" value={oneYearPrice} onChange={(e)=>setOneYearPrice(e.target.value)}/>\n                        </div>\n                    </div>\n                </form>\n                <div className=\"footer\">\n                    <div onClick={addCampaign} className=\"button\">Add</div>\n                    <div onClick={onClose} className=\"button\">Close</div>\n                </div>\n            </div> \n        </div>, document.getElementById('modal-root'))\n        \n    )\n}\n\nexport default NewCampaign;","import React, { useEffect, useRef, useState } from 'react'\nimport './Nav.css'\nimport NewCampaign from './NewCampaign';\n\nfunction Nav({handleCampaignType , handleDataChanged}){\n    const [openNewCampaignForm , setOpenNewCampaignForm] = useState(false) ;\n    const upcomingCampaignRef  = useRef(null) ;\n    const link = 'link' ; \n    const clickedLink = \"clicked-link\" ;\n    useEffect(()=>{\n        upcomingCampaignRef.current.classList.add( clickedLink);\n    },[])\n\n    var handleClick = (e , val)=>{\n        e.preventDefault() ; \n        handleCampaignType(val) ;\n\n        //Change the classList of links \n        var links = document.getElementsByClassName(link) ;\n        console.log(links); \n        for(var i = 0; i <links.length ; ++i){\n            links[i].classList.remove(clickedLink) ;\n        }\n        e.target.classList.add(clickedLink);\n    }\n    return(\n        <nav className=\"navBar\">\n            <a href=\"#\" onClick={(e)=>{handleClick(e,1)}}className='link' ref={upcomingCampaignRef}>Upcoming Campaings</a>\n            <a href=\"#\" onClick={(e)=>{handleClick(e,0)}} className='link' >Live Campaigns</a>\n            <a href=\"#\" onClick={(e)=>{handleClick(e,-1)}} className='link' >Past Campaings</a>\n            <button className='add-campaign' onClick={()=>setOpenNewCampaignForm(true)}>+</button>\n            {openNewCampaignForm&& <NewCampaign handleDataChanged={handleDataChanged} onClose={()=>{setOpenNewCampaignForm(false)}}></NewCampaign>}\n        </nav>\n    )\n}\n\nexport default Nav ;","import React, { useContext, useEffect } from 'react' \nimport { Button } from 'react-bootstrap';\nimport Calendar from 'react-calendar'\nimport { ClickableContext } from '../components/main';\n\nfunction CalendarModel({date ,handleDataChange , handleCalendarVis}){\n    //setClickable(true) is used to make Background div clickable  \n    const setClickable =  useContext(ClickableContext) ;\n\n    useEffect(()=>{\n        window.addEventListener('click' , handleClick) ; \n\n        return ()=>{\n            window.removeEventListener('click', handleClick)\n        }\n    },[])\n\n    var handleClick = ()=>{\n        setClickable(true); \n        handleCalendarVis() ;\n    }\n    return(\n        <div className=\"calendarModel model\">\n            <Calendar value={date} onChange={(date)=>{\n                handleDataChange(date);\n                setClickable(true);\n                }}/>\n        </div>\n    )\n}\n\nexport default CalendarModel ;","import React, { useState , useContext } from 'react'\nimport CalendarModel from '../models/CalenderModel'\nimport {updateDoc ,doc} from 'firebase/firestore'\nimport {db} from '../firebase-config'\nimport { ClickableContext } from '../components/main';\nimport { AiFillFile} from \"react-icons/ai\";\nimport { IoStatsChart } from \"react-icons/io5\";\nimport {FaCalendarAlt } from \"react-icons/fa\" ;\nimport axios from 'axios';\nimport { useNavigate} from \"react-router-dom\";\nimport './Actions.css'\n\nfunction Actions({data, dataChanged ,setDataChanged}){\n    //setClickable(false) is used to make Background div non clickable  \n    const setClickable =  useContext(ClickableContext) ;\n    const[calenderVis , setCalenderVis] = useState(false) ; \n    const navigate = useNavigate() ;\n\n    var handleDataChange = async (date)=>{\n        const campaign = doc(db , 'campaigns' , data.id ) ;\n        const newField = {createdOn : date.getTime()}; \n        await updateDoc(campaign ,newField) ;\n        setDataChanged(!dataChanged) ;\n        setCalenderVis(false);\n    }\n\n    var handleRequest = async (e) =>{\n        e.preventDefault() ; \n        var url = e.target.href ; \n        axios.get(url).then().catch(err=>{\n            if(err.response.status == \"404\"){\n                navigate(\"/error\");\n            }\n        })\n\n    }\n    return (\n        <td className=\"col actions\">\n            <ul>\n                <li><AiFillFile className='icon' size={20} color='lightgreen'/><a href={data.csv} onClick={(e)=>handleRequest(e)}>CSV</a></li>\n                <li><IoStatsChart className='icon' size={20} color='orange'/><a href={data.report} onClick={(e)=>handleRequest(e)}>Report</a></li>\n                <li>\n                    <FaCalendarAlt className='icon' size={20} color='lightblue'/>\n                    <button onClick={()=>{\n                        setClickable(false);\n                        setCalenderVis(!calenderVis)\n                        }} className='schedule'>Schedule Again</button>\n                    {calenderVis&&<CalendarModel date ={new Date(data.createdOn)} handleDataChange = {handleDataChange} handleCalendarVis={()=>{setCalenderVis(!calenderVis)}} />}\n                </li>\n            </ul>\n        </td>\n    )\n}\n\nexport default Actions ; ","import React from 'react'\nimport './Campaign.css'\n\nfunction Campaign({name , region , img_url}){\n    return (\n        <td className=\"col campaign\">\n            <table>\n                <tbody>\n                    <tr className=\"campaignRow\">    \n                        <td className='campaignImg' rowSpan= \"2\"><img src={img_url} /></td>\n                        <td className='game-name'><p>{name}</p></td>\n                    </tr>\n                    <tr className=\"campaignRow\">\n                        <td className='region'>{region}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </td>\n    )\n}\n\nexport default Campaign ; ","export function ConvertDateFormat(ticks){\n    //Return Date in format MMM YYYY, dd (oct 2019 , 28)\n    var date = new Date(ticks) ; \n    //toDateString Return Date in format (Day Month Date Year)\n    var dateStr = date.toDateString().split(' ') ; \n    var result = dateStr[1] + ' ' + dateStr[3] + ',' + dateStr[2] ; \n    return result ; \n    \n}\nexport function NumberOfDaysDiff(date1 , date2){\n    // One day in milliseconds\n    const oneDay = 1000 * 60 * 60 * 24;\n\n    //Time difference\n    const timeDiff = Math.abs(GetTimeDiff(date1 , date2));\n\n    //Convert timeDiff into DayDiff\n    const diffInDays = Math.floor(timeDiff / oneDay);\n\n    return diffInDays;\n    \n    \n}\n\nexport function GetTimeDiff(date1 , date2){\n    var dateUTC1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n    var dateUTC2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n\n    return dateUTC1 - dateUTC2 ;\n}","import React from 'react'\nimport {NumberOfDaysDiff} from '../time'\n\nimport './CampaignDate.css'\n\nfunction ConvertDateFormat(ticks){\n    //Return Date in format MMM YYYY, dd (oct 2019 , 28)\n    var date = new Date(ticks) ; \n    //toDateString Return Date in format (Day Month Date Year)\n    var dateStr = date.toDateString().split(' ') ; \n    var result = dateStr[1] + ' ' + dateStr[3] + ',' + dateStr[2] ; \n    return result ; \n    \n}\nfunction CampaignDate({ticks}){\n    var date = ConvertDateFormat(ticks) ; \n\n    //Get the number of milliseconds elapsed since January 1, 1970\n    var now = new Date() ; \n    var daysDiff = NumberOfDaysDiff(now , new Date(ticks)) ;\n    const ahead = \"Ahead\" ; \n    const ago = \"Ago\" ;\n    var message = ' Days ' + ((ticks >= now )?ahead:ago) ;\n    return (\n        <td className='col campaignDate'>\n            <div>{date}</div>\n            <div className='days-diff'>{daysDiff} {message} </div>\n        </td>\n    )\n}\n\nexport default CampaignDate ;   ","import React, { useContext } from 'react'\nimport { ClickableContext } from '../components/main';\n\nfunction PriceModel({handleVisiblity}){\n    const setCliclable =  useContext(ClickableContext) ;\n    return(\n\n        <div className = \"priceModel model\">\n            Price Information; \n            <div className=\"close\" onClick={()=>{\n                    handleVisiblity(false);\n                    setCliclable(true);\n                }}>Close</div>\n        </div>\n    )\n}\n\nexport default PriceModel ;","import React, { useContext, useState } from 'react'\nimport PriceModel from '../models/PriceModel';\nimport { ClickableContext } from './main';\nimport { AiFillDollarCircle } from \"react-icons/ai\";\n\nimport './View.css'\n\nfunction View(props){\n    const [priceModelVis , setPriceModelVis] = useState(false) ; \n    const setClickable =  useContext(ClickableContext) ;\n    return (\n        <td className=\"col view\">\n            <a href =\"#\" onClick={(event)=>{\n                event.preventDefault() ; \n                setPriceModelVis(true);\n                setClickable(false);\n                }} >  \n            <AiFillDollarCircle className='priceIcon icon' color='yellow' size={20}/>View Pricing</a>\n            {priceModelVis && <PriceModel handleVisiblity= {setPriceModelVis}/>}\n        </td>\n    )\n}\nexport default View ; ","import React from 'react'\nimport Actions from './Actions'\nimport Campaign from './Campaign'\nimport CampaignDate from './CampaignDate';\nimport View from './View'\n\nfunction Row({data , dataChanged , setDataChanged}){ \n    return (\n        <tr className='row'>\n            <CampaignDate ticks = {data.createdOn} />\n            <Campaign name={data.name} region ={data.region} img_url = {data.img_url}/>\n            <View price={data.price} />\n            <Actions data={data} dataChanged={dataChanged} setDataChanged={setDataChanged} />\n        </tr>\n    )\n}\n\nexport default Row ;","import React, { useEffect, useState } from 'react'\nimport Nav from './Nav'\nimport Row from './row'\nimport {GetTimeDiff} from '../time'\nimport {db} from '../firebase-config'\nimport {collection , getDocs} from \"firebase/firestore\"\n\nimport './Main.css'\n\nexport const ClickableContext = React.createContext() ; \n\nfunction Main(){\n\n    const [clickable , setClickable] = useState(true) ;\n    const [campaigns , setCampaigns] = useState([]) ;\n    //Upcoming Campaign is Represented by 1 \n    //Live Campaign is represented by 0 \n    //Past Campaign is represented by -1 \n    //Initialy Campaign is set to 1  \n    const[campaignType , setCampaignType] = useState(1) ; \n\n    //This is to check if campaign date is changed \n    const[dataChanged , setDataChanged] = useState(false) ; \n\n    const campaignsCollectionRef = collection(db , \"campaigns\") ;\n    \n    useEffect(()=>{\n        const getCampaigns = async() =>{\n            const data = await getDocs(campaignsCollectionRef) ; \n            setCampaigns(data.docs.map((doc)=>({...doc.data() , id :doc.id}))) ; \n        }\n        getCampaigns() ; \n    } ,[dataChanged])\n\n    return(\n        <ClickableContext.Provider value={setClickable}>\n            <div className={clickable?\"container\":\"non-clickable-container\"}>\n                <header >\n                   <p>Manage Campaigns</p> \n                </header>\n                <Nav handleCampaignType = {setCampaignType} handleDataChanged={()=>{setDataChanged(!dataChanged)}}/>\n                <table className=\"main\">\n                    <thead>\n                        <tr>\n                            <th className='col'>DATE</th>\n                            <th className='col'>CAMPAIGN</th>\n                            <th className='col'>VIEW</th>\n                            <th className='col'>ACTIONS</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        campaigns.map(item=>{\n                            if(compareParity(GetTimeDiff(new Date(item.createdOn) , new Date()), campaignType)){\n                                return <Row key={item.id} data= {item} dataChanged= {dataChanged} setDataChanged={setDataChanged}></Row>\n                            }\n                            return null ;\n                        })\n                    }\n                    </tbody>\n                </table>\n            </div>\n        </ClickableContext.Provider>\n\n    \n        \n    )\n}\n\nfunction compareParity(first , second){\n    if(first === 0 && second ===0) return true ; \n    if(first === 0) return false ; \n    if(second === 0) return false ;\n\n    var firstParity = first/Math.abs(first) ; \n    var secondParity = second/Math.abs(second) ; \n    if(firstParity === secondParity) return true ; \n    return false ;\n}\n\nexport default Main ;","import React from \"react\";\n\nfunction Error408(){\n    return(\n        <h1>Error 404 </h1>\n    )\n}\n\nexport default Error408;","import logo from './logo.svg';\nimport './App.css';\nimport Main from './components/main';\nimport { BrowserRouter, Route, Routes  } from 'react-router-dom';\nimport Error408 from './components/Error408';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Routes>\n        <Route path='/error' element={<Error408 />} />\n        <Route path ='/fdc' element={<Main />} />\n      </Routes>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}